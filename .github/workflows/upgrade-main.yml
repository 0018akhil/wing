# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: upgrade-main
on:
  workflow_dispatch: {}
  schedule:
    - cron: 0 0 * * *
jobs:
  upgrade:
    name: Upgrade
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      patch_created: ${{ steps.create_patch.outputs.patch_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Login to private npm registry
        run: npm config set @monadahq:registry https://npm.pkg.github.com && npm set //npm.pkg.github.com/:_authToken $PROJEN_GITHUB_TOKEN
        env:
          PROJEN_GITHUB_TOKEN: ${{ secrets.PROJEN_GITHUB_TOKEN }}
      - name: Codesign executable
        run: |-
          echo $CSC_LINK | base64 --decode > $HOME/certificate.p12 
          security create-keychain -p $CSC_KEY_PASSWORD build.keychain 
          security default-keychain -s build.keychain 
          security unlock-keychain -p $CSC_KEY_PASSWORD build.keychain 
          security import $HOME/certificate.p12 -k build.keychain -P $CSC_KEY_PASSWORD -T /usr/bin/codesign 
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $CSC_KEY_PASSWORD build.keychain
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
      - name: set GH_TOKEN
        run: echo 'GH_TOKEN=${{ secrets.PROJEN_GITHUB_TOKEN }}' >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.PROJEN_GITHUB_TOKEN }}
      - name: Install dependencies
        run: npm ci
      - name: Upgrade dependencies
        run: npx projen upgrade
      - id: create_patch
        name: Find mutations
        run: |-
          git add .
          git diff --staged --patch --exit-code > .repo.patch || echo "::set-output name=patch_created::true"
      - if: steps.create_patch.outputs.patch_created
        name: Upload patch
        uses: actions/upload-artifact@v2
        with:
          name: .repo.patch
          path: .repo.patch
  pr:
    name: Create Pull Request
    needs: upgrade
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    if: ${{ needs.upgrade.outputs.patch_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
          ref: main
      - name: Download patch
        uses: actions/download-artifact@v3
        with:
          name: .repo.patch
          path: ${{ runner.temp }}
      - name: Apply patch
        run: '[ -s ${{ runner.temp }}/.repo.patch ] && git apply ${{ runner.temp }}/.repo.patch || echo "Empty patch. Skipping."'
      - name: Set git identity
        run: |-
          git config user.name "monabot"
          git config user.email "monabot@monada.co"
      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
          commit-message: |-
            chore(deps): upgrade dependencies

            Upgrades project dependencies. See details in [workflow run].

            [Workflow Run]: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ------

            *Automatically created by projen via the "upgrade-main" workflow*
          branch: github-actions/upgrade-main
          title: "chore(deps): upgrade dependencies"
          body: |-
            Upgrades project dependencies. See details in [workflow run].

            [Workflow Run]: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ------

            *Automatically created by projen via the "upgrade-main" workflow*
          author: monabot <monabot@monada.co>
          committer: monabot <monabot@monada.co>
          signoff: true
